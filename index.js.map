{"version":3,"file":"index.js","sources":["../src/js/burgerMenu.js","../src/js/accordion.js","../src/js/animation.js"],"sourcesContent":["const burger = document.querySelector('#burger');\nconst menu = document.querySelector('#menu');\nconst background = document.querySelector('#primary-nav');\nconst icon = document.querySelector('#burger-icon');\nconst menuLinks = document.querySelectorAll('.menu__link');\n\nburger.addEventListener('click', () => {\n  const isOpen = menu.classList.toggle('menu__list--active');\n\n  background.classList.toggle('nav--active');\n  icon.setAttribute(\n    'href',\n    isOpen ? '/img/svg/close.svg' : '/img/svg/burger.svg'\n  );\n});\nmenuLinks.forEach(link => {\n  link.addEventListener('click', e => {\n    e.preventDefault();\n    menu.classList.remove('menu__list--active');\n    background.classList.remove('nav--active');\n    icon.setAttribute('href', '/img/svg/burger.svg');\n\n    const href = link.getAttribute('href');\n    const targetSection = document.querySelector(href);\n    if (targetSection) {\n      setTimeout(() => {\n        targetSection.scrollIntoView({ behavior: 'smooth' });\n      }, 100);\n    }\n  });\n});\n\nwindow.addEventListener('scroll', () => {\n  const nav = document.querySelector('.nav');\n  if (window.scrollY > 10) {\n    nav.classList.add('nav--scrolled');\n  } else {\n    nav.classList.remove('nav--scrolled');\n  }\n});\n","import Accordion from 'accordion-js';\nimport 'accordion-js/dist/accordion.min.css';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  new Accordion('.accordion-container', {\n    duration: 300,\n    showMultiple: false,\n    openOnInit: [],\n    elementClass: 'ac',\n    triggerClass: 'ac-trigger',\n    panelClass: 'ac-panel',\n    activeClass: 'is-active',\n  });\n});\n","document.addEventListener('DOMContentLoaded', () => {\n  const zenBlocks = document.querySelectorAll('.zen-block, .zen-block--double');\n\n  if (!zenBlocks.length) {\n    console.warn('zen-блоки не знайдені в DOM');\n    return;\n  }\n\n  const observer = new IntersectionObserver(\n    entries => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          entry.target.classList.add('animate');\n          observer.unobserve(entry.target);\n        }\n      });\n    },\n    {\n      threshold: 0.3,\n    }\n  );\n\n  zenBlocks.forEach(block => observer.observe(block));\n});\n"],"names":["burger","menu","background","icon","menuLinks","isOpen","link","e","href","targetSection","nav","Accordion","zenBlocks","observer","entries","entry","block"],"mappings":"0xBAAA,MAAMA,EAAS,SAAS,cAAc,SAAS,EACzCC,EAAO,SAAS,cAAc,OAAO,EACrCC,EAAa,SAAS,cAAc,cAAc,EAClDC,EAAO,SAAS,cAAc,cAAc,EAC5CC,EAAY,SAAS,iBAAiB,aAAa,EAEzDJ,EAAO,iBAAiB,QAAS,IAAM,CACrC,MAAMK,EAASJ,EAAK,UAAU,OAAO,oBAAoB,EAEzDC,EAAW,UAAU,OAAO,aAAa,EACzCC,EAAK,aACH,OACAE,EAAS,qBAAuB,qBACpC,CACA,CAAC,EACDD,EAAU,QAAQE,GAAQ,CACxBA,EAAK,iBAAiB,QAASC,GAAK,CAClCA,EAAE,eAAc,EAChBN,EAAK,UAAU,OAAO,oBAAoB,EAC1CC,EAAW,UAAU,OAAO,aAAa,EACzCC,EAAK,aAAa,OAAQ,qBAAqB,EAE/C,MAAMK,EAAOF,EAAK,aAAa,MAAM,EAC/BG,EAAgB,SAAS,cAAcD,CAAI,EAC7CC,GACF,WAAW,IAAM,CACfA,EAAc,eAAe,CAAE,SAAU,QAAU,CAAA,CACpD,EAAE,GAAG,CAEZ,CAAG,CACH,CAAC,EAED,OAAO,iBAAiB,SAAU,IAAM,CACtC,MAAMC,EAAM,SAAS,cAAc,MAAM,EACrC,OAAO,QAAU,GACnBA,EAAI,UAAU,IAAI,eAAe,EAEjCA,EAAI,UAAU,OAAO,eAAe,CAExC,CAAC,ECpCD,SAAS,iBAAiB,mBAAoB,IAAM,CAClD,IAAIC,EAAU,uBAAwB,CACpC,SAAU,IACV,aAAc,GACd,WAAY,CAAE,EACd,aAAc,KACd,aAAc,aACd,WAAY,WACZ,YAAa,WACjB,CAAG,CACH,CAAC,ECbD,SAAS,iBAAiB,mBAAoB,IAAM,CAClD,MAAMC,EAAY,SAAS,iBAAiB,gCAAgC,EAE5E,GAAI,CAACA,EAAU,OAAQ,CACrB,QAAQ,KAAK,6BAA6B,EAC1C,MACD,CAED,MAAMC,EAAW,IAAI,qBACnBC,GAAW,CACTA,EAAQ,QAAQC,GAAS,CACnBA,EAAM,iBACRA,EAAM,OAAO,UAAU,IAAI,SAAS,EACpCF,EAAS,UAAUE,EAAM,MAAM,EAEzC,CAAO,CACF,EACD,CACE,UAAW,EACZ,CACL,EAEEH,EAAU,QAAQI,GAASH,EAAS,QAAQG,CAAK,CAAC,CACpD,CAAC"}